
main {
    display: flex;
    flex-direction: column;
    font-family: 'Open Sans', sans-serif;
    padding: 1.5rem;
    height: calc(100% - 3rem);
    overflow-y: auto;
}

@media only screen and (min-device-width: 1100px) {
    /* for legibility, limit maximum width */
    main > * {
        max-width: 56rem;
    }
}

main p, main ol, main ul {
    line-height: 1.75em;
}

main strong {
    color: var(--flash-skin);
}

main a strong {
    color: inherit;
}

main blockquote {
    margin: .5rem;
    padding: .25rem;
    padding-left: 1rem;
    padding-right: 1rem;
    border-left: .5rem solid var(--flash-dark);
    background-color: var(--flash-darker);
    border-radius: 0rem .5rem .5rem 0rem;
}

main blockquote.warning {
    border-left: .5rem solid var(--flash-skin);
}

main .emoji {
    height: 1.5em;
    margin: 0px !important;
    display: inline !important;
    vertical-align: middle;
}

main > div {
    margin-bottom: 1rem;
}

main h1 {
    font-family: 'Varela Round', sans-serif;
    font-weight: bold;
    font-size: 3rem;
    color: var(--flash-h1-color);
}

main h1.entity-title {
    font-size: 2.25rem;
    color: var(--flash-light);
}

main h1 .version {
    font-size: 1.25rem;
}

main h1 img {
    height: 3.25rem;
    margin-right: .5rem;
}

main h1 .feather {
    width: 2.25rem;
    height: 2.25rem;
    margin-right: .5rem;
}

main h1 a, main h1 a:visited {
    color: var(--flash-h1-color);
    text-decoration: none;
    font-style: normal;
    font-size: 3rem;
    display: inline-flex;
    flex-direction: row;
    align-items: center;
}

main h1 a:hover {
    text-decoration: underline;
    cursor: pointer;
}

main h1::after {
    content: ' ';
    display: block;
    margin-top: .5rem;
    border: .1rem solid var(--flash-border); 
}

main h2 {
    margin-top: 2rem;
    font-family: 'Varela Round', sans-serif;
    font-weight: bold;
    font-size: 1.75rem;
}

main h2::after {
    content: ' ';
    display: block;
    margin-top: .5rem;
    border: .1rem solid var(--flash-border); 
}

main a {
    color: var(--flash-cyan-light);
    text-decoration: underline;
}

main a:visited {
    color: var(--flash-purple);
}

main a:hover {
    color: var(--flash-white);
    text-decoration: underline;
    cursor: pointer;
}

main .button {
    display: inline-grid;
    border-radius: 9999px;
    color: var(--flash-white);
    background-color: var(--flash-dark);
    padding: .5rem;
    padding-left: 3rem;
    padding-right: 3rem;
    text-align: center;
    text-decoration: none;
    transition: color, border, background;
}

main .button:hover {
    background-color: var(--flash-cyan-darker);
    color: var(--flash-cyan-light);
}

main .button.outlined {
    background-color: rgba(0, 0, 0, 0);
    border: .15rem solid var(--flash-white); 
}

main .button.outlined:hover {
    background-color: rgba(0, 0, 0, 0);
    border-color: var(--flash-cyan);
}

.icon.feather-box {
    color: var(--flash-red);
}

.icon.feather-box.variant {
    color: var(--flash-green);
}

.icon.feather-file {
    color: var(--flash-light);
}

.icon.feather-code {
    color: var(--flash-purple);
}

.header-link {
    font-size: 1.1rem;
    color: var(--flash-purple);
}

.header-link .url {
    color: var(--flash-green);
}

a.disabled:hover {
    text-decoration: none;
    cursor: default;
}

.section {
    margin-top: .5rem;
}

.section > summary {
    font-family: 'Varela Round', sans-serif;
    font-weight: bold;
    font-size: 1.75rem;
    display: block;
    margin-bottom: .5rem;
    user-select: none;
}

.section > summary span {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.section > summary .feather {
    margin-right: .5rem;
    margin-left: .5rem;
}

.section[open] > summary .feather-chevron-right {
    transform: rotate(90deg);
}

.section > summary:hover {
    cursor: pointer;
}

.section > summary::after {
    content: ' ';
    display: block;
    margin-top: .5rem;
    border: .1rem solid var(--flash-border);
}

div.text {
    display: flex;
    flex-direction: column;
}

main div:not(.entity) {
    display: flex;
    flex-direction: column;
}

.section > div {
    padding-left: 2rem;
    padding-right: 2rem;
}

.section > summary .badge {
    margin-left: .5rem;
}

.badge {
    font-family: 'Open Sans', sans-serif;
    font-size: 1rem;
    background-color: var(--flash-dark);
    color: var(--flash-light);
    padding: .15rem;
    padding-left: 1rem;
    padding-right: 1rem;
    border-radius: 9999px;
}

/* Code thingies */

details.entity-desc {
    display: flex;
    width: fit-content;
}

details.entity-desc[open] {
    background-color: var(--flash-darker);
    border-radius: .5rem;
    margin-top: .25rem;
    margin-bottom: .25rem;
}

details.entity-desc > * {
    padding: .5rem;
    border-radius: .5rem;
}

details.entity-desc > div {
    padding: 1.5rem;
}

details.entity-desc > summary {
    user-select: none;
    margin-bottom: 0;
}

details.entity-desc > summary:hover {
    cursor: pointer;
    background-color: var(--flash-hover);
}

details.entity-desc > summary .feather-chevron-right {
    height: 1.15rem;
    align-self: center;
    opacity: 50%;
}

details.entity-desc[open] > summary .feather-chevron-right {
    transform: rotate(90deg);
    opacity: 100%;
}

.description {
    display: inline-flex;
    flex-direction: column;
    gap: .5rem;
    max-width: fit-content;
    margin-bottom: 2rem;
}

.description > .text a {
    color: var(--flash-orange);
    display: inline;
}

.description > section {
    display: flex;
    margin: 0;
    padding: 1rem;
    padding-right: 5rem;
    border-radius: .5rem;
    background-color: var(--flash-shade);
    flex-direction: column;
    max-width: fit-content;
}

.description > section > .grid {
    display: grid;
    grid-template-columns: min-content 1fr;
    align-items: center;
    gap: 1rem;
}

.description > section > .title {
    color: var(--flash-light);
    font-weight: bold;
    margin-bottom: .5rem;
}

.description > section > .grid > * {
    padding: 0;
    margin: 0;
}

.description > section > .grid > p {
    font-weight: bold;
    color: var(--flash-highlight);
    margin-right: 1rem;
}

.entity a {
    text-decoration: none;
}

.entity .params {
    flex-wrap: wrap;
}

.entity {
    font-family: 'Source Code Pro', monospace;
    color: var(--flash-light);
    display: flex;
    flex-direction: row;
    margin-bottom: .5rem;
    flex-wrap: wrap;
}

.entity .entity {
    margin-bottom: 0;
}

.entity .keyword {
    color: var(--flash-purple);
}

.entity .scope {
    color: var(--flash-light);
    opacity: 50%;
}

.entity .alias {
    color: var(--flash-skin);
}

.entity .template-param {
    color: var(--flash-skin);
}

.entity .literal {
    color: var(--flash-white);
}

.entity .enum {
    color: var(--flash-red);
}

.entity.type {
    color: var(--flash-light);
}

.entity.namespace > .name, .namespace {
    color: var(--flash-orange);
}

.entity.class > .name, .class.name {
    color: var(--flash-yellow);
}

.entity.struct > .name, .struct.name {
    color: var(--flash-yellow);
}

.entity.type.pod {
    color: var(--flash-purple);
}

.entity.fun > .name {
    color: var(--flash-blue);
}

.entity.var > .name {
    color: var(--flash-white);
}

.entity.fun .params {
    display: flex;
    flex-direction: row;
}

.entity .space-before {
    margin-left: .5rem;
}

.entity .space-after {
    margin-right: .5rem;
}

/* code blocks */

code:not(pre > code) {
    display: inline-block;
    background-color: var(--flash-gray-darkest);
    color: var(--flash-light);
    border-radius: .25rem;
    padding: .25rem;
    padding-top: 0rem;
    padding-bottom: 0rem;
    font-size: 1em;
}

.line-numbers .line-numbers-rows {
    border-right: .15rem solid var(--flash-dark);
}

.line-numbers-rows > span::before {
    color: var(--flash-light);
}

/* 1em is a bit too small for some reason in paragraphs */
p code:not(pre > code), a code:not(pre > code), ul code:not(pre > code), ol code:not(pre > code) {
    font-size: 1rem;
}

a code:not(pre > code) {
    color: inherit;
}

code.header-link {
    padding: 1rem;
}

pre {
    display: inline-block;
    padding: 1rem;
    padding-right: 4rem;
    min-width: 0;
    max-width: min-content;
    overflow-x: auto;
    background-color: var(--flash-gray-darkest);
    color: var(--flash-white);
    border-radius: .5rem;
    font-size: 1rem;
}

code .url-link, code .url-link:visited {
    color: inherit;
}

code .url-link:hover {
    color: var(--flash-white);
}

code .keyword {
    color: var(--flash-purple);
}

code .class-name {
    color: var(--flash-yellow);
}

code .function {
    color: var(--flash-blue);
}

code .operator, code .punctuation {
    color: var(--flash-light);
}

code .boolean {
    color: var(--flash-skin);
}

code .number {
    color: var(--flash-red);
}

code .string {
    color: var(--flash-green);
}

code .comment {
    color: var(--flash-dark);
}

.toolbar-wrapper {
    max-width: fit-content;
}

.toolbar-wrapper > .toolbar {
    position: relative;
    height: 0;
    align-self: flex-end;
    z-index: 1;
}

.toolbar-wrapper > .toolbar > button {
    margin-top: 1.5rem;
    margin-right: .5rem;
    padding: .35rem;
    border-radius: .35rem;
    border: none;
    color: var(--flash-dark);
    background-color: var(--flash-gray-darkest);
}

.toolbar-wrapper > .toolbar > button > .feather {
    height: 1.25rem;
}

.toolbar-wrapper > .toolbar > button:hover {
    background-color: var(--flash-hover);
    color: var(--flash-white);
    cursor: pointer;
}

.toolbar-wrapper > .toolbar > button.success {
    color: var(--flash-green);
}

.toolbar-wrapper > .toolbar > button.failure {
    color: var(--flash-red);
}
